const Vulnerability = require('../models/Vulnerability');

exports.getUserVulnerabilities = async (req, res) => {
  try {
    const vulns = await Vulnerability.find({ userId: req.user }).sort({ timestamp: -1 });
    res.json(vulns);
  } catch (err) {
    res.status(500).json({ message: 'Server error' });
  }
};

exports.addVulnerability = async (req, res) => {
  const { type, severity, description } = req.body;
  try {
    const vuln = new Vulnerability({ userId: req.user, type, severity, description });
    await vuln.save();
    res.status(201).json({ message: 'Vulnerability added' });
  } catch (err) {
    res.status(500).json({ message: 'Server error' });
  }
};

exports.updateVulnerabilityStatus = async (req, res) => {
  const { id } = req.params;
  const { status } = req.body; // expected: 'open', 'resolved', 'ignored'
  try {
    const vuln = await Vulnerability.findOne({ _id: id, userId: req.user });
    if (!vuln) return res.status(404).json({ message: 'Vulnerability not found' });

    vuln.status = status;
    await vuln.save();
    res.json({ message: 'Vulnerability status updated' });
  } catch (err) {
    res.status(500).json({ message: 'Server error' });
  }
};
